<UserControl x:Class="eft_dma_radar.UI.Radar.Views.RadarOverlay"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:eft_dma_radar.UI.Radar.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">

    <!-- design‑time VM hookup -->
    <d:UserControl.DataContext>
        <d:DesignInstance Type="{x:Type vm:RadarOverlayViewModel}"
                          IsDesignTimeCreatable="False" />
    </d:UserControl.DataContext>

    <UserControl.Resources>
        <!-- converter to toggle Visibility -->
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </UserControl.Resources>

    <Grid>
        <!-- ─── top‑left toolbar ─────────────────────────────────────────────── -->
        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Margin="8">
            <ToggleButton x:Name="MapFreeToggle"
                          Content="{Binding MapFreeButtonText}"
                          IsChecked="{Binding IsMapFreeEnabled}"
                          Padding="6,2"
                          Margin="0,0,4,0" />
            <ToggleButton x:Name="LootToggle"
                          Visibility="{Binding IsLootButtonVisible, Converter={StaticResource BoolToVis}}"
                          Content="Loot"
                          IsChecked="{Binding IsLootOverlayVisible}"
                          Padding="6,2" />
        </StackPanel>

        <!-- ─── in‑tree Loot overlay ─────────────────────────────────────────── -->
        <Border Background="#DD1E1E1E"
                Padding="10"
                CornerRadius="4"
                MinWidth="300"
                MaxWidth="400"
                Visibility="{Binding IsLootOverlayVisible, Converter={StaticResource BoolToVis}}"
                Panel.ZIndex="50"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Margin="8,40,0,0">
            <StackPanel>
                <TextBlock Text="Loot"
                           Foreground="White"
                           FontWeight="Bold"
                           FontSize="14" />

                <TextBlock Text="Sort by Ruble Value"
                           Foreground="White"
                           Margin="0,8,0,4" />

                <Grid Margin="0,0,0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                               Text="Regular"
                               Foreground="White"
                               VerticalAlignment="Center" />
                    <TextBox Grid.Column="1"
                             Text="{Binding RegularValue, UpdateSourceTrigger=PropertyChanged}"
                             MinWidth="100" />
                    <TextBlock Grid.Column="2"
                               Text="Valuable"
                               Foreground="White"
                               VerticalAlignment="Center"
                               Margin="12,0,0,0" />
                    <TextBox Grid.Column="3"
                             Text="{Binding ValuableValue, UpdateSourceTrigger=PropertyChanged}"
                             MinWidth="100" />
                    <CheckBox Grid.Column="4"
                              Content="Price Per Slot"
                              IsChecked="{Binding PricePerSlot}"
                              Foreground="White"
                              Margin="12,0,0,0" />
                </Grid>

                <StackPanel Orientation="Horizontal"
                            Margin="0,0,0,8">
                    <RadioButton Content="Flea Prices"
                                 ToolTip="Use flea market prices"
                                 IsChecked="{Binding IsFleaPrices, Mode=TwoWay}"
                                 GroupName="PriceSource"
                                 Foreground="White" />
                    <RadioButton Content="Trader Prices"
                                 ToolTip="Use trader prices"
                                 IsChecked="{Binding IsTraderPrices, Mode=TwoWay}"
                                 GroupName="PriceSource"
                                 Foreground="White"
                                 Margin="12,0,0,0" />
                </StackPanel>

                <WrapPanel Margin="0,0,0,8">
                    <CheckBox Content="Hide Corpses"
                              IsChecked="{Binding HideCorpses}"
                              Foreground="White"
                              Margin="0,0,12,0" />
                    <CheckBox Content="Show Meds"
                              IsChecked="{Binding ShowMeds}"
                              Foreground="White"
                              Margin="0,0,12,0" />
                    <CheckBox Content="Show Food"
                              IsChecked="{Binding ShowFood}"
                              Foreground="White"
                              Margin="0,0,12,0" />
                    <CheckBox Content="Show Backpacks"
                              IsChecked="{Binding ShowBackpacks}"
                              Foreground="White" />
                </WrapPanel>

                <TextBlock Text="Loot Search (ex: Item1,Item2,etc.)"
                           Foreground="White"
                           Margin="0,8,0,4" />
                <TextBox Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=300}"
                         HorizontalAlignment="Stretch" />
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
